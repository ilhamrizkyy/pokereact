{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ilhamra/Desktop/Tokped/pokemon/src/pokemon/PokemonDetail.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class PokemonDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      pokemonIndex: '',\n      imageUrl: '',\n      imageBackUrl: '',\n      types: [],\n      desc: '',\n      stats: {\n        hp: '',\n        attack: '',\n        defense: '',\n        speed: '',\n        specialAttack: '',\n        specialDefense: ''\n      },\n      height: '',\n      weight: '',\n      eggGroups: '',\n      catchRate: '',\n      abilities: '',\n      genderRatioMale: '',\n      genderRatioFemale: '',\n      evs: '',\n      hatchSteps: '',\n      moves: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      pokemonIndex\n    } = this.props.match.params; //grab the pokemon index from the params\n\n    const pokeurl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n    const pokeSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`; //get pokemon data and info\n\n    const pokemonRes = await axios.get(pokeurl);\n    const name = pokemonRes.data.name;\n    const imageUrl = pokemonRes.data.sprites.front_default;\n    const imageBackUrl = pokemonRes.data.sprites.back_default;\n    let {\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense\n    } = '';\n    pokemonRes.data.stats.map(stat => {\n      switch (stat.stat.name) {\n        case 'hp':\n          hp = stat['base_stat'];\n          break;\n\n        case 'attack':\n          attack = stat['base_stat'];\n          break;\n\n        case 'defense':\n          defense = stat['base_stat'];\n          break;\n\n        case 'speed':\n          speed = stat['base_stat'];\n          break;\n\n        case 'special-attack':\n          specialAttack = stat['base_stat'];\n          break;\n\n        case 'special-defense':\n          specialDefense = stat['base_stat'];\n          break;\n\n        default:\n          break;\n      }\n    });\n    const height = pokemonRes.data.height * 10;\n    const weight = pokemonRes.data.weight / 10;\n    const types = pokemonRes.data.types.map(type => type.type.name);\n    const moves = pokemonRes.data.moves.map(move => move.move.name);\n    const abilities = pokemonRes.data.abilities.map(ability => {\n      return ability.ability.name.toLowerCase().split('-').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n    }).join(', ');\n    const evs = pokemonRes.data.stats.filter(stat => {\n      if (stat.effort > 0) {\n        return true;\n      }\n\n      return false;\n    }).map(stat => {\n      return `${stat.effort} ${stat.stat.name.toLowerCase().split('-').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ')}`;\n    }).join(', ');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ilhamra/Desktop/Tokped/pokemon/src/pokemon/PokemonDetail.js"],"names":["React","Component","axios","PokemonDetail","state","name","pokemonIndex","imageUrl","imageBackUrl","types","desc","stats","hp","attack","defense","speed","specialAttack","specialDefense","height","weight","eggGroups","catchRate","abilities","genderRatioMale","genderRatioFemale","evs","hatchSteps","moves","componentDidMount","props","match","params","pokeurl","pokeSpeciesUrl","pokemonRes","get","data","sprites","front_default","back_default","map","stat","type","move","ability","toLowerCase","split","s","charAt","toUpperCase","substring","join","filter","effort","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class PokemonDetail extends Component {\n    state = {\n        name: '',\n        pokemonIndex: '',\n        imageUrl: '',\n        imageBackUrl: '',\n        types: [],\n        desc: '',\n        stats: {\n            hp: '',\n            attack: '',\n            defense: '',\n            speed: '',\n            specialAttack: '',\n            specialDefense: ''\n        },\n        height: '',\n        weight: '',\n        eggGroups: '',\n        catchRate: '',\n        abilities: '',\n        genderRatioMale: '',\n        genderRatioFemale: '',\n        evs: '',\n        hatchSteps: '',\n        moves: [],\n    }\n\n    async componentDidMount() {\n        const { pokemonIndex } = this.props.match.params; //grab the pokemon index from the params\n\n        const pokeurl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n        const pokeSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`;\n\n        //get pokemon data and info\n        const pokemonRes = await axios.get(pokeurl);\n        const name = pokemonRes.data.name;\n        const imageUrl = pokemonRes.data.sprites.front_default;\n        const imageBackUrl = pokemonRes.data.sprites.back_default;\n\n        let { hp, attack, defense, speed, specialAttack, specialDefense } = '';\n\n        pokemonRes.data.stats.map(stat => {\n            switch (stat.stat.name) {\n                case 'hp':\n                    hp = stat['base_stat'];\n                    break;\n                case 'attack':\n                    attack = stat['base_stat'];\n                    break;\n                case 'defense':\n                    defense = stat['base_stat'];\n                    break;\n                case 'speed':\n                    speed = stat['base_stat'];\n                    break;\n                case 'special-attack':\n                    specialAttack = stat['base_stat'];\n                    break;\n                case 'special-defense':\n                    specialDefense = stat['base_stat'];\n                    break;\n                default:\n                    break;\n            }\n        }\n        )\n        const height = pokemonRes.data.height * 10;\n\n        const weight = pokemonRes.data.weight / 10;\n\n        const types = pokemonRes.data.types.map(type => type.type.name);\n\n        const moves = pokemonRes.data.moves.map(move => move.move.name);\n\n        const abilities = pokemonRes.data.abilities\n            .map(ability => {\n                return ability.ability.name\n                    .toLowerCase()\n                    .split('-')\n                    .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n                    .join(' ');\n            })\n            .join(', ');\n        const evs = pokemonRes.data.stats\n            .filter(stat => {\n                if (stat.effort > 0) {\n                    return true;\n                }\n                return false;\n            })\n            .map(stat => {\n                return `${stat.effort} ${stat.stat.name\n                    .toLowerCase()\n                    .split('-')\n                    .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n                    .join(' ')}`;\n            })\n            .join(', ');\n\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h1>{this.state.name}</h1>\n            </div >\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}